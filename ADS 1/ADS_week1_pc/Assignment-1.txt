1. What does the following code fragment print when N is 50 ?
 
A.	PUSH OPERATION
Stack values = [ 0   ]
Stack values = [ 0 , 1, ]
Stack values = [ 0 , 1, 0  ]
Stack values = [ 0 , 1, 0 ,0  ]
Stack values = [ 0 , 1, 0 ,0 ,1 ]
Stack values = [ 0 , 1, 0 ,0 ,1 ,0 ]
	POP OPERATION
Stack values = [0 , 1, 0 ,0 ,1]
Stack values = [0 , 1, 0 ,0 ]
Stack values = [0 , 1, 0 ,]
Stack values = [0 , 1,]
Stack values = [0 ]
Stack values = Empty

2. Give the output printed by Queue for the input at the end of all operations
If “-” perform dequeue else enqueue each word.
Playing Cricket - is - a hobby - - of - - mentor - deepak
 Elements in the queue are at the end of operation
Enqueue queue = Playing
Enqueue queue = Playing Cricket
Dequeue queue = Cricket
Enqueue queue = Cricket is
Dequeue queue = is
Enqueue queue = is a
Enqueue queue = is a hobby
Dequeue	queue = a hobby
Dequeue	queue = hobby
Enqueue	queue = hobby of
Dequeue	queue = of
Dequeue	queue = "EMPTY"
Enqueue	queue = mentor
Dequeue	queue = "EMPTY"
Enqueue queue = deepak


3. Suppose that a client performs an intermixed sequence of (stack) push and pop operations. The push operations put the integers 0 through 9 in order onto the stack; the pop operations print out the return values. Which of the following sequence(s) could not occur?
Note: For answer write the options in order separated with comma and space eg: a, b, d 
a. 5 4 3 1 2 0 9 8 7 6
A. F
b. 0 9 8 7 6 5 4 3 2 1
A. T
c. 0 1 2 3 4 5 6 7 8 9
A. T
d. 1 3 5 7 9 2 4 6 8 0
A. F
e. 1 5 0 2 3 4 6 7 8 9
A. F

5. {[]()} If you use stacks for checking parentheses balanced or not ? After each iteration, Print the size of the stack.
A. 		STACK
	Push Operation 
		Stack= {
		Size = 1
	Push Operation 
		Stack= {,[
		Size = 2
	Pop Operation 
		Stack= {
		Size = 1
	Push Operation 
		Stack= {,(
		Size = 2
	Pop Operation 
		Stack= {
		Size = 1
	Pop Operation 
		Stack= "Empty"
		Size = 0
	
	
6. Give the order of growth (as a function of N, k ) of the running times of the following code fragment:
A. N^2

7. Give the order of growth (as a function of n ) of the running times of the following code fragment:
A. 1

8. Give the order of growth (as a function of n ) of the running times of the following code fragment:
A. N

9. Give the order of growth (as a function of n ) of the running times of the following code fragment:
A. 1

10. Give the number of components remain at the end of Quick Find Algorithm for the following union operations.
A. 0 & 1
